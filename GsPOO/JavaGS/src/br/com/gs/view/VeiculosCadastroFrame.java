package br.com.gs.view;

import br.com.gs.model.Veiculo;
import br.com.gs.repository.VeiculoDAO;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.sql.SQLException;
import java.util.Locale;

public class VeiculosCadastroFrame extends JFrame {


    private VeiculoDAO dao = new VeiculoDAO();
    private ButtonGroup refrigeradoGrup;
    private JPanel MainPainel;
    private JComboBox comboBoxTipo;
    private JRadioButton simRadioButton;
    private JRadioButton nãoRadioButton;
    private JTextField textFieldProprietario;
    private JTextField textFieldMarca;
    private JTextField textFieldModelo;
    private JComboBox comboCombustivel;
    private JTextField textFieldCargaMax;
    private JTextField textFieldTanqueMax;
    private JButton registrarButton;
    private JButton cancelarButton;
    private JButton limparButton;
    private JLabel placa;
    private JTextField textFieldPlaca;
    private RadioButtonHandler handler;
    String radioResult = "nao";
    private Image icon = new ImageIcon(this.getClass().getResource("/iconCaminhao.png")).getImage();

    public VeiculosCadastroFrame() throws SQLException {

        setContentPane(MainPainel);

        setTitle("Cadastro veiculos");
        setSize(700, 280);
        setMinimumSize(new Dimension(840, 750));
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setVisible(false);
        this.setIconImage(icon);
        refrigeradoGrup = new ButtonGroup();
        simRadioButton = new JRadioButton("Sim");
        nãoRadioButton = new JRadioButton("Não");
        refrigeradoGrup.add(simRadioButton);
        refrigeradoGrup.add(nãoRadioButton);
        simRadioButton.addItemListener(handler);
        nãoRadioButton.addItemListener(handler);
        limparButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                limpar();
            }
        });
        cancelarButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                dispose();
            }
        });
        registrarButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                salvar();

            }

        });

    }

    private void salvar() {
        if (!textFieldProprietario.getText().equals("") && !textFieldMarca.getText().equals("") && !textFieldModelo.getText().equals("") && !textFieldPlaca.getText().equals("") && !textFieldCargaMax.getText().equals("") && !textFieldTanqueMax.equals("")) {
            Veiculo veiculo = new Veiculo(comboBoxTipo.getSelectedItem().toString().toLowerCase(), radioResult, textFieldProprietario.getText().toLowerCase(), textFieldMarca.getText().toLowerCase(), textFieldModelo.getText().toLowerCase(), textFieldPlaca.getText().toLowerCase(), comboCombustivel.getSelectedItem().toString().toLowerCase(), Float.parseFloat(textFieldCargaMax.getText()), Float.parseFloat(textFieldTanqueMax.getText()));
            this.dao.insert(veiculo);
            JOptionPane.showMessageDialog(this, "Salvo com sucesso!");
            this.limpar();
            this.AtualizarTabela();
        } else {
            JOptionPane.showMessageDialog(this, "Prencha todos os campos!");
        }
    }

    private void limpar() {
        comboBoxTipo.setSelectedIndex(0);
        textFieldProprietario.setText("");
        nãoRadioButton.setSelected(true);
        textFieldMarca.setText("");
        textFieldModelo.setText("");
        comboCombustivel.setSelectedIndex(0);
        textFieldCargaMax.setText("");
        textFieldTanqueMax.setText("");
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        MainPainel = new JPanel();
        MainPainel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(20, 3, new Insets(20, 20, 20, 20), -1, -1));
        MainPainel.setBackground(new Color(-9593152));
        Font MainPainelFont = this.$$$getFont$$$("Arial Black", Font.BOLD, 16, MainPainel.getFont());
        if (MainPainelFont != null) MainPainel.setFont(MainPainelFont);
        final JLabel label1 = new JLabel();
        label1.setBackground(new Color(-918273));
        label1.setForeground(new Color(-1));
        label1.setIcon(new ImageIcon(getClass().getResource("/Veiculos.png")));
        label1.setText("");
        MainPainel.add(label1, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setBackground(new Color(-726273));
        Font label2Font = this.$$$getFont$$$("Arial", Font.BOLD, 48, label2.getFont());
        if (label2Font != null) label2.setFont(label2Font);
        label2.setForeground(new Color(-1));
        label2.setText("Registro veiculos");
        MainPainel.add(label2, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label3 = new JLabel();
        Font label3Font = this.$$$getFont$$$("Arial Black", Font.BOLD, 18, label3.getFont());
        if (label3Font != null) label3.setFont(label3Font);
        label3.setForeground(new Color(-1));
        label3.setText("Tipo do veiculo");
        MainPainel.add(label3, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label4 = new JLabel();
        Font label4Font = this.$$$getFont$$$("Arial Black", Font.BOLD, 18, label4.getFont());
        if (label4Font != null) label4.setFont(label4Font);
        label4.setForeground(new Color(-1));
        label4.setText("Refrigerado");
        MainPainel.add(label4, new com.intellij.uiDesigner.core.GridConstraints(3, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        comboBoxTipo = new JComboBox();
        Font comboBoxTipoFont = this.$$$getFont$$$(null, -1, 14, comboBoxTipo.getFont());
        if (comboBoxTipoFont != null) comboBoxTipo.setFont(comboBoxTipoFont);
        final DefaultComboBoxModel defaultComboBoxModel1 = new DefaultComboBoxModel();
        defaultComboBoxModel1.addElement("Caminhão");
        defaultComboBoxModel1.addElement("Carro");
        defaultComboBoxModel1.addElement("Trator");
        comboBoxTipo.setModel(defaultComboBoxModel1);
        MainPainel.add(comboBoxTipo, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        simRadioButton = new JRadioButton();
        simRadioButton.setBackground(new Color(-9593152));
        simRadioButton.setEnabled(true);
        Font simRadioButtonFont = this.$$$getFont$$$(null, -1, 16, simRadioButton.getFont());
        if (simRadioButtonFont != null) simRadioButton.setFont(simRadioButtonFont);
        simRadioButton.setForeground(new Color(-1));
        simRadioButton.setText("Sim");
        MainPainel.add(simRadioButton, new com.intellij.uiDesigner.core.GridConstraints(3, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        nãoRadioButton = new JRadioButton();
        nãoRadioButton.setBackground(new Color(-9593152));
        nãoRadioButton.setForeground(new Color(-1));
        nãoRadioButton.setSelected(true);
        nãoRadioButton.setText("Não");
        MainPainel.add(nãoRadioButton, new com.intellij.uiDesigner.core.GridConstraints(3, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label5 = new JLabel();
        Font label5Font = this.$$$getFont$$$("Arial Black", Font.BOLD, 18, label5.getFont());
        if (label5Font != null) label5.setFont(label5Font);
        label5.setForeground(new Color(-1));
        label5.setText("Proprietario");
        MainPainel.add(label5, new com.intellij.uiDesigner.core.GridConstraints(5, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        textFieldProprietario = new JTextField();
        Font textFieldProprietarioFont = this.$$$getFont$$$(null, -1, 14, textFieldProprietario.getFont());
        if (textFieldProprietarioFont != null) textFieldProprietario.setFont(textFieldProprietarioFont);
        MainPainel.add(textFieldProprietario, new com.intellij.uiDesigner.core.GridConstraints(5, 1, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JLabel label6 = new JLabel();
        Font label6Font = this.$$$getFont$$$("Arial Black", Font.BOLD, 18, label6.getFont());
        if (label6Font != null) label6.setFont(label6Font);
        label6.setForeground(new Color(-1));
        label6.setText("marca");
        MainPainel.add(label6, new com.intellij.uiDesigner.core.GridConstraints(7, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label7 = new JLabel();
        Font label7Font = this.$$$getFont$$$("Arial Black", Font.BOLD, 18, label7.getFont());
        if (label7Font != null) label7.setFont(label7Font);
        label7.setForeground(new Color(-1));
        label7.setText("modelo");
        MainPainel.add(label7, new com.intellij.uiDesigner.core.GridConstraints(9, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label8 = new JLabel();
        Font label8Font = this.$$$getFont$$$("Arial Black", Font.BOLD, 18, label8.getFont());
        if (label8Font != null) label8.setFont(label8Font);
        label8.setForeground(new Color(-1));
        label8.setText("Tipo de combustivel");
        MainPainel.add(label8, new com.intellij.uiDesigner.core.GridConstraints(13, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        textFieldMarca = new JTextField();
        Font textFieldMarcaFont = this.$$$getFont$$$(null, -1, 14, textFieldMarca.getFont());
        if (textFieldMarcaFont != null) textFieldMarca.setFont(textFieldMarcaFont);
        MainPainel.add(textFieldMarca, new com.intellij.uiDesigner.core.GridConstraints(7, 1, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        textFieldModelo = new JTextField();
        Font textFieldModeloFont = this.$$$getFont$$$(null, -1, 14, textFieldModelo.getFont());
        if (textFieldModeloFont != null) textFieldModelo.setFont(textFieldModeloFont);
        MainPainel.add(textFieldModelo, new com.intellij.uiDesigner.core.GridConstraints(9, 1, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        comboCombustivel = new JComboBox();
        Font comboCombustivelFont = this.$$$getFont$$$(null, -1, 14, comboCombustivel.getFont());
        if (comboCombustivelFont != null) comboCombustivel.setFont(comboCombustivelFont);
        final DefaultComboBoxModel defaultComboBoxModel2 = new DefaultComboBoxModel();
        defaultComboBoxModel2.addElement("gasolina");
        defaultComboBoxModel2.addElement("diesel");
        defaultComboBoxModel2.addElement("etanol");
        defaultComboBoxModel2.addElement("elétrico");
        comboCombustivel.setModel(defaultComboBoxModel2);
        MainPainel.add(comboCombustivel, new com.intellij.uiDesigner.core.GridConstraints(13, 1, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label9 = new JLabel();
        Font label9Font = this.$$$getFont$$$("Arial Black", Font.BOLD, 18, label9.getFont());
        if (label9Font != null) label9.setFont(label9Font);
        label9.setForeground(new Color(-1));
        label9.setText("Carga maxima");
        MainPainel.add(label9, new com.intellij.uiDesigner.core.GridConstraints(15, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        textFieldCargaMax = new JTextField();
        Font textFieldCargaMaxFont = this.$$$getFont$$$(null, -1, 14, textFieldCargaMax.getFont());
        if (textFieldCargaMaxFont != null) textFieldCargaMax.setFont(textFieldCargaMaxFont);
        MainPainel.add(textFieldCargaMax, new com.intellij.uiDesigner.core.GridConstraints(15, 1, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JLabel label10 = new JLabel();
        Font label10Font = this.$$$getFont$$$("Arial Black", Font.BOLD, 18, label10.getFont());
        if (label10Font != null) label10.setFont(label10Font);
        label10.setForeground(new Color(-1));
        label10.setText("Tanque maximo");
        MainPainel.add(label10, new com.intellij.uiDesigner.core.GridConstraints(17, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        textFieldTanqueMax = new JTextField();
        Font textFieldTanqueMaxFont = this.$$$getFont$$$(null, -1, 14, textFieldTanqueMax.getFont());
        if (textFieldTanqueMaxFont != null) textFieldTanqueMax.setFont(textFieldTanqueMaxFont);
        MainPainel.add(textFieldTanqueMax, new com.intellij.uiDesigner.core.GridConstraints(17, 1, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        registrarButton = new JButton();
        registrarButton.setBackground(new Color(-16777216));
        Font registrarButtonFont = this.$$$getFont$$$(null, Font.BOLD, 16, registrarButton.getFont());
        if (registrarButtonFont != null) registrarButton.setFont(registrarButtonFont);
        registrarButton.setForeground(new Color(-4473925));
        registrarButton.setOpaque(true);
        registrarButton.setText("Registrar");
        MainPainel.add(registrarButton, new com.intellij.uiDesigner.core.GridConstraints(19, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        cancelarButton = new JButton();
        cancelarButton.setBackground(new Color(-16777216));
        Font cancelarButtonFont = this.$$$getFont$$$(null, Font.BOLD, 16, cancelarButton.getFont());
        if (cancelarButtonFont != null) cancelarButton.setFont(cancelarButtonFont);
        cancelarButton.setForeground(new Color(-1));
        cancelarButton.setOpaque(true);
        cancelarButton.setText("Cancelar");
        MainPainel.add(cancelarButton, new com.intellij.uiDesigner.core.GridConstraints(19, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        limparButton = new JButton();
        limparButton.setBackground(new Color(-16777216));
        Font limparButtonFont = this.$$$getFont$$$(null, Font.BOLD, 16, limparButton.getFont());
        if (limparButtonFont != null) limparButton.setFont(limparButtonFont);
        limparButton.setForeground(new Color(-1));
        limparButton.setOpaque(true);
        limparButton.setText("Limpar");
        MainPainel.add(limparButton, new com.intellij.uiDesigner.core.GridConstraints(19, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer1 = new com.intellij.uiDesigner.core.Spacer();
        MainPainel.add(spacer1, new com.intellij.uiDesigner.core.GridConstraints(18, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer2 = new com.intellij.uiDesigner.core.Spacer();
        MainPainel.add(spacer2, new com.intellij.uiDesigner.core.GridConstraints(16, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer3 = new com.intellij.uiDesigner.core.Spacer();
        MainPainel.add(spacer3, new com.intellij.uiDesigner.core.GridConstraints(14, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(11, 20), null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer4 = new com.intellij.uiDesigner.core.Spacer();
        MainPainel.add(spacer4, new com.intellij.uiDesigner.core.GridConstraints(10, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer5 = new com.intellij.uiDesigner.core.Spacer();
        MainPainel.add(spacer5, new com.intellij.uiDesigner.core.GridConstraints(8, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer6 = new com.intellij.uiDesigner.core.Spacer();
        MainPainel.add(spacer6, new com.intellij.uiDesigner.core.GridConstraints(6, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer7 = new com.intellij.uiDesigner.core.Spacer();
        MainPainel.add(spacer7, new com.intellij.uiDesigner.core.GridConstraints(4, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer8 = new com.intellij.uiDesigner.core.Spacer();
        MainPainel.add(spacer8, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        placa = new JLabel();
        Font placaFont = this.$$$getFont$$$("Arial Black", -1, 18, placa.getFont());
        if (placaFont != null) placa.setFont(placaFont);
        placa.setForeground(new Color(-1));
        placa.setText("Placa");
        MainPainel.add(placa, new com.intellij.uiDesigner.core.GridConstraints(11, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer9 = new com.intellij.uiDesigner.core.Spacer();
        MainPainel.add(spacer9, new com.intellij.uiDesigner.core.GridConstraints(12, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        textFieldPlaca = new JTextField();
        MainPainel.add(textFieldPlaca, new com.intellij.uiDesigner.core.GridConstraints(11, 1, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        ButtonGroup buttonGroup;
        buttonGroup = new ButtonGroup();
        buttonGroup.add(nãoRadioButton);
        buttonGroup.add(simRadioButton);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return MainPainel;
    }

    private class RadioButtonHandler implements ItemListener {

        @Override
        public void itemStateChanged(ItemEvent event) {
            if (simRadioButton.isSelected())
                radioResult = "sim";
            if (nãoRadioButton.isSelected())
                radioResult = "nao";
        }


    }

    private Home principal;

    public void MostrarTela(Home telaprincipal) {
        this.principal = telaprincipal;
        setVisible(true);
    }

    private void AtualizarTabela() {
        principal.limparTabela();
        principal.preencherTabela();
    }

    public static void main(String[] args) {
        try {
            VeiculosCadastroFrame myframe = new VeiculosCadastroFrame();
        } catch (SQLException e) {
            e.printStackTrace();
        }

    }
}
